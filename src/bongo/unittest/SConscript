# -*- mode: python; -*-

Import("env")

env = env.Clone()

env.Library(target="unittest",
            source=[
                'bson_test_util.cpp',
                'death_test.cpp',
                'temp_dir.cpp',
                'unittest.cpp',
                'unittest_helpers.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/bongo/base',
                '$BUILD_DIR/bongo/util/options_parser/options_parser',
            ])

env.Library("unittest_main", ['unittest_main.cpp'],
            LIBDEPS=[
                'unittest',
                 ])

env.Library(target="integration_test_main",
            source=[
                'integration_test_main.cpp',
            ],
            LIBDEPS=[
                'unittest',
                '$BUILD_DIR/bongo/base',
                '$BUILD_DIR/bongo/client/connection_string',
                '$BUILD_DIR/bongo/util/options_parser/options_parser_init',
            ],
)

env.CppUnitTest('unittest_test', 'unittest_test.cpp')
env.CppUnitTest('fixture_test', 'fixture_test.cpp')
env.CppUnitTest('temp_dir_test', 'temp_dir_test.cpp')

env.Library(
    target='concurrency',
    source=[
        'barrier.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
    ],
)

env.Library(
    target='task_executor_proxy',
    source=[
        'task_executor_proxy.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/executor/task_executor_interface',
    ],
)
