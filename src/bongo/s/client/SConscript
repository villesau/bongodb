# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target='sharding_client',
    source=[
        'shard_connection.cpp',
        'shard_factory.cpp',
        'shard_registry.cpp',
        'shard_remote.cpp',
        'version_manager.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/client/clientdriver',
        '$BUILD_DIR/bongo/client/fetcher',
        '$BUILD_DIR/bongo/client/remote_command_targeter',
        '$BUILD_DIR/bongo/db/auth/authcore',
        '$BUILD_DIR/bongo/db/commands',
        '$BUILD_DIR/bongo/db/lasterror',
        '$BUILD_DIR/bongo/executor/connection_pool_stats',
        '$BUILD_DIR/bongo/executor/task_executor_pool',
        '$BUILD_DIR/bongo/rpc/metadata',
        '$BUILD_DIR/bongo/s/cluster_last_error_info',
        '$BUILD_DIR/bongo/s/is_bongos',
        'shard_interface',
        #'$BUILD_DIR/bongo/s/coreshard', # CYCLE
    ],
    LIBDEPS_TAGS=[
        # TODO(ADAM, 2017,01-06): See `CYCLE` tags above
        'illegal_cyclic_or_unresolved_dependencies_whitelisted',
    ],
)

env.Library(
    target='sharding_connection_hook',
    source=[
        'sharding_connection_hook.cpp',
        'sharding_network_connection_hook.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/client/clientdriver',
        '$BUILD_DIR/bongo/s/coreshard',
    ],
)

env.Library(
    target='parallel',
    source=[
        'parallel.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/db/bson/dotted_path_support',
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/util/net/network',
        'sharding_client',
    ],
)

env.CppUnitTest(
    target='sharding_client_test',
    source=[
        'shard_connection_test.cpp',
    ],
    LIBDEPS=[
        'sharding_client',
        'sharding_connection_hook',
        '$BUILD_DIR/bongo/client/remote_command_retry_scheduler',
        '$BUILD_DIR/bongo/db/auth/authorization_manager_mock_init',
        '$BUILD_DIR/bongo/db/service_context_noop_init',
        '$BUILD_DIR/bongo/dbtests/mocklib',
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/util/net/network',
    ]
)

env.CppUnitTest(
    target='shard_registry_test',
    source=[
        'shard_registry_data_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/s/sharding_test_fixture',
    ]
)

env.Library(
    target='shard_interface',
    source=[
        'shard.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/client/remote_command_retry_scheduler',
        '$BUILD_DIR/bongo/s/shard_id',
        '$BUILD_DIR/bongo/s/write_ops/batch_write_types',
    ]
)

env.Library(
    target='shard_local',
    source=[
        'shard_local.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/client/clientdriver',
        '$BUILD_DIR/bongo/db/dbdirectclient',
        '$BUILD_DIR/bongo/db/repl/repl_coordinator_impl',
        'shard_interface'
    ],
)

env.CppUnitTest(
    target='shard_local_test',
    source=[
        'shard_local_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/db/repl/replmocks',
        '$BUILD_DIR/bongo/db/service_context_d_test_fixture',
        'shard_local',
    ],
)
