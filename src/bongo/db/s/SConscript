# -*- mode: python -*-

Import("env")

env = env.Clone()

env.Library(
    target='metadata',
    source=[
        'collection_metadata.cpp',
        'metadata_loader.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/client/clientdriver',
        '$BUILD_DIR/bongo/db/dbdirectclient',
        '$BUILD_DIR/bongo/db/common',
        '$BUILD_DIR/bongo/db/range_arithmetic',
        '$BUILD_DIR/bongo/db/repl/repl_coordinator_impl',
        '$BUILD_DIR/bongo/db/service_context',
        '$BUILD_DIR/bongo/s/common',
    ],
)

env.Library(
    target='migration_types',
    source=[
        'migration_session_id.cpp',
        'start_chunk_clone_request.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/bson/util/bson_extract',
        '$BUILD_DIR/bongo/s/common',
    ],
)

env.Library(
    target='type_shard_identity',
    source=[
        'type_shard_identity.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/s/write_ops/batch_write_types',
        '$BUILD_DIR/bongo/bson/util/bson_extract',
        '$BUILD_DIR/bongo/s/common',
    ],
)

env.Library(
    target='sharding',
    source=[
        'active_migrations_registry.cpp',
        'chunk_move_write_concern_options.cpp',
        'collection_range_deleter.cpp',
        'collection_sharding_state.cpp',
        'metadata_manager.cpp',
        'migration_chunk_cloner_source.cpp',
        'migration_chunk_cloner_source_legacy.cpp',
        'migration_destination_manager.cpp',
        'migration_source_manager.cpp',
        'migration_util.cpp',
        'move_timing_helper.cpp',
        'operation_sharding_state.cpp',
        'shard_identity_rollback_notifier.cpp',
        'sharded_connection_info.cpp',
        'sharding_egress_metadata_hook_for_bongod.cpp',
        'sharding_initialization_bongod.cpp',
        'sharding_state.cpp',
        'sharding_state_recovery.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/bson/util/bson_extract',
        '$BUILD_DIR/bongo/db/common',
        '$BUILD_DIR/bongo/db/range_deleter',
        '$BUILD_DIR/bongo/db/rw_concern_d',
        '$BUILD_DIR/bongo/db/concurrency/lock_manager',
        '$BUILD_DIR/bongo/db/query/internal_plans',
        '$BUILD_DIR/bongo/db/repl/repl_coordinator_impl',
        '$BUILD_DIR/bongo/s/client/shard_local',
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/s/is_bongos',
        '$BUILD_DIR/bongo/s/sharding_initialization',
        '$BUILD_DIR/bongo/util/elapsed_tracker',
        'metadata',
        'migration_types',
        'type_shard_identity',
        #'$BUILD_DIR/bongo/db/ops/write_ops', # CYCLE
        #'$BUILD_DIR/bongo/s/catalog/sharding_catalog_manager_impl', # CYCLE
        #'$BUILD_DIR/bongo/db/query/query', # CYCLE
        #'$BUILD_DIR/bongo/db/catalog/catalog', # CYCLE
        #'$BUILD_DIR/bongo/db/dbhelpers', # CYCLE
        #'$BUILD_DIR/bongo/db/db_raii', # CYCLE
    ],
    LIBDEPS_TAGS=[
        # TODO(ADAM, 2017-01-06): See `CYCLE` tags above
        'illegal_cyclic_or_unresolved_dependencies_whitelisted',
    ],
)

env.Library(
    target='balancer',
    source=[
        'balancer/balancer.cpp',
        'balancer/balancer_chunk_selection_policy.cpp',
        'balancer/balancer_chunk_selection_policy_impl.cpp',
        'balancer/balancer_policy.cpp',
        'balancer/cluster_statistics.cpp',
        'balancer/cluster_statistics_impl.cpp',
        'balancer/migration_manager.cpp',
        'balancer/scoped_migration_request.cpp',
        'balancer/type_migration.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/base',
        '$BUILD_DIR/bongo/bson/util/bson_extract',
        '$BUILD_DIR/bongo/db/common',
        '$BUILD_DIR/bongo/s/catalog/dist_lock_manager',
        '$BUILD_DIR/bongo/s/coreshard',
    ],
)

env.CppUnitTest(
    target='balancer_test',
    source=[
        'balancer/balancer_policy_test.cpp',
        'balancer/cluster_statistics_test.cpp',
        'balancer/migration_manager_test.cpp',
        'balancer/scoped_migration_request_test.cpp',
        'balancer/type_migration_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/s/config_server_test_fixture',
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/util/version_impl',
        'balancer',
    ]
)

env.Library(
    target='commands',
    source=[
        'check_sharding_index_command.cpp',
        'cleanup_orphaned_cmd.cpp',
        'config/configsvr_add_shard_command.cpp',
        'config/configsvr_add_shard_to_zone_command.cpp',
        'config/configsvr_commit_chunk_migration_command.cpp',
        'config/configsvr_control_balancer_command.cpp',
        'config/configsvr_merge_chunk_command.cpp',
        'config/configsvr_move_chunk_command.cpp',
        'config/configsvr_remove_shard_from_zone_command.cpp',
        'config/configsvr_set_feature_compatibility_version_command.cpp',
        'config/configsvr_split_chunk_command.cpp',
        'config/configsvr_update_zone_key_range_command.cpp',
        'get_shard_version_command.cpp',
        'merge_chunks_command.cpp',
        'migration_chunk_cloner_source_legacy_commands.cpp',
        'migration_destination_manager_legacy_commands.cpp',
        'move_chunk_command.cpp',
        'set_shard_version_command.cpp',
        'sharding_server_status.cpp',
        'sharding_state_command.cpp',
        'split_chunk_command.cpp',
        'split_vector_command.cpp',
        'unset_sharding_command.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/db/bson/dotted_path_support',
        '$BUILD_DIR/bongo/db/commands/dcommands',
        '$BUILD_DIR/bongo/db/commands',
        '$BUILD_DIR/bongo/db/db_raii',
        '$BUILD_DIR/bongo/db/dbhelpers',
        '$BUILD_DIR/bongo/db/index_d',
        '$BUILD_DIR/bongo/db/range_deleter_d',
        '$BUILD_DIR/bongo/db/repl/repl_coordinator_global',
        'balancer',
        'metadata',
        'sharding',
    ],
)

env.CppUnitTest(
    target='migration_types_test',
    source=[
        'migration_session_id_test.cpp',
        'start_chunk_clone_request_test.cpp',
    ],
    LIBDEPS=[
        'migration_types',
    ]
)

env.CppUnitTest(
    target='type_shard_identity_test',
    source=[
        'type_shard_identity_test.cpp'
    ],
    LIBDEPS=[
        'type_shard_identity',
    ]
)

env.CppUnitTest(
    target='sharding_metadata_test',
    source=[
        'collection_metadata_test.cpp',
        'metadata_loader_test.cpp',
    ],
    LIBDEPS=[
        'metadata',
        '$BUILD_DIR/bongo/s/shard_server_test_fixture',
    ],
)

env.CppUnitTest(
    target='shard_test',
    source=[
        'active_migrations_registry_test.cpp',
        'metadata_manager_test.cpp',
        'migration_chunk_cloner_source_legacy_test.cpp',
        'sharding_state_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/db/query/query_request',
        '$BUILD_DIR/bongo/s/catalog/dist_lock_manager_mock',
        '$BUILD_DIR/bongo/s/catalog/sharding_catalog_client_impl',
        '$BUILD_DIR/bongo/s/catalog/sharding_catalog_mock',
        '$BUILD_DIR/bongo/s/sharding_bongod_test_fixture',
    ],
)

env.CppUnitTest(
    target='collection_sharding_state_test',
    source=[
        'collection_sharding_state_test.cpp',
        'collection_range_deleter_test.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/bongo/client/remote_command_targeter_mock',
        '$BUILD_DIR/bongo/db/repl/replmocks',
        '$BUILD_DIR/bongo/db/serveronly',
        '$BUILD_DIR/bongo/executor/network_test_env',
        '$BUILD_DIR/bongo/executor/thread_pool_task_executor_test_fixture',
        '$BUILD_DIR/bongo/s/catalog/sharding_catalog_mock',
        '$BUILD_DIR/bongo/s/coreshard',
        '$BUILD_DIR/bongo/util/clock_source_mock',
        '$BUILD_DIR/bongo/util/net/message_port_mock',
        '$BUILD_DIR/bongo/db/service_context_d_test_fixture',
    ],
)

